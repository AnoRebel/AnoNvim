local M = {}

M.version = "v1.5.0"

---- UI -----
M.ui = {
	theme = "tokyonight", -- default theme
	transparency = false,
	background = "dark",
	-- fonts = "Victor Mono:11",
	fonts = "JetBrains:11",
	list = false,
}

M.servers = {
	"bashls",
	"cssls",
	-- "csharp_ls",
	-- "denols",
	"dotls",
	"emmet_ls",
	"eslint",
	"gopls",
	"graphql",
	"html",
	"intelephense",
	"jsonls",
	-- "omnisharp",
	"pyright",
	"lua_ls",
	"sourcery",
	"svelte",
	"sqlls",
	"tailwindcss",
	"tsserver",
	"volar",
}

M.packages = {
	"astro-language-server",
	"autopep8",
	"bash-language-server",
	"csharpier",
	"css-lsp",
	"dot-language-server",
	"black",
	-- "csharp-language-server",
	-- "vscode-langservers-extracted",
	-- "delve",
	"dockerfile-language-server",
	"dot-language-server",
	"elixir-ls",
	"emmet-ls",
	-- "eslint_d",
	"gopls",
	"goimports-reviser",
	"golines",
	-- "delve",
	-- "graphql-language-service-cli",
	"html-lsp",
	"intelephense",
	"isort",
	"json-lsp",
	"jq",
	"lua-language-server",
	"luacheck",
	"marksman",
	"prettierd",
	"pyright",
	-- "prisma-language-server",
	"revive",
	"shellcheck",
	"shfmt",
	"stylua",
	"svelte-language-server",
	"sqlls",
	"tailwindcss-language-server",
	"typescript-language-server",
	"vue-language-server",
}

M.treesitter = {
	"astro",
	"bash",
	"c",
	"c_sharp",
	"cmake",
	"comment",
	"cpp",
	"css",
	"dart",
	"diff",
	"dockerfile",
	"dot",
	"eex",
	"elixir",
	"erlang",
	"gitcommit",
	"gitignore",
	"go",
	"gomod",
	"gowork",
	"gosum",
	"graphql",
	"heex",
	"html",
	"http",
	"javascript",
	"jsdoc",
	"json",
	"jsonc",
	"json5",
	"lua",
	"markdown",
	"markdown_inline",
	"meson",
	"ninja",
	"nix",
	"php",
	"prisma",
	"python",
	"query",
	"rasi",
	"regex",
	"rust",
	"scss",
	"svelte",
	"sxhkdrc",
	"sql",
	"toml",
	"tsx",
	"typescript",
	"vim",
	"vimdoc",
	"vue",
	"yaml",
}

M.log = {
	---@usage can be { "trace", "debug", "info", "warn", "error", "fatal" },
	level = "warn",
	viewer = {
		---@usage this will fallback on "less +F" if not found
		cmd = "lnav",
		layout_config = {
			---@usage direction = 'vertical' | 'horizontal' | 'window' | 'float',
			direction = "horizontal",
			open_mapping = "",
			size = 40,
			float_opts = {},
		},
	},
	-- currently disabled due to instabilities
	override_notify = false,
}

M.options = {
	undodir = require("avim.utils").join_paths(_G.get_state_dir(), "undo"),
	sessiondir = require("avim.utils").join_paths(_G.get_state_dir(), "sessions"),
	peek = {
		max_height = 15,
		max_width = 30,
		context = 10,
	},
	rounded_border_chars = { "╭", "─", "╮", "│", "╯", "─", "╰", "│" },
	borderchars = {
		"─",
		"│",
		"─",
		"│",
		"╭",
		"╮",
		"╯",
		"╰",
	},
	squared_border_chars = {
		TOP_LEFT = "┌",
		TOP_RIGHT = "┐",
		MID_HORIZONTAL = "─",
		MID_VERTICAL = "│",
		BOTTOM_LEFT = "└",
		BOTTOM_RIGHT = "┘",
	},
	border_chars = {
		"┌",
		"─",
		"┐",
		"│",
		"┘",
		"─",
		"└",
		"│",
	},
}

M.bufferDimNSId = vim.api.nvim_create_namespace("buffer-dim")

M.mappings = require("avim.mappings")

return M
